<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" mc:Ignorable="d"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:controls="clr-namespace:ClrVpin.Controls"
                    xmlns:converters="clr-namespace:ClrVpin.Converters"
                    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
                    xmlns:shared="clr-namespace:ClrVpin.Models.Shared"
                    xmlns:vps="clr-namespace:ClrVpin.Models.Feeder.Vps"
                    xmlns:explorer="clr-namespace:ClrVpin.Explorer"
                    xmlns:game="clr-namespace:ClrVpin.Models.Shared.Game">

  <ResourceDictionary.MergedDictionaries>
    <controls:SharedResourceDictionary Source="\Controls\Styles.xaml" />
    <controls:SharedResourceDictionary Source="\Controls\DataTemplates.xaml" />
    <controls:SharedResourceDictionary Source="\Controls\ControlTemplates.xaml" />
    <controls:SharedResourceDictionary Source="\Controls\Converters.xaml" />
    <controls:SharedResourceDictionary Source="\Controls\Constants.xaml" />
    <controls:SharedResourceDictionary Source="\Shared\Notification.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <!-- x:Shared resources must be defined at the top level resource dictionary -->
  <controls:Triggers x:Key="RatingsTextChangedTriggers" x:Shared="False">
    <b:EventTrigger EventName="TextChanged">
      <b:InvokeCommandAction Command="{Binding RatingsChangedCommand}" d:DataContext="{d:DesignInstance Type=explorer:ExplorerResultsViewModel}" />
    </b:EventTrigger>
  </controls:Triggers>

  <Style x:Key="UrlButtonStyle" TargetType="Button" BasedOn="{StaticResource MaterialDesignFloatingActionDarkButton}">
    <Setter Property="ToolTipService.InitialShowDelay" Value="0" />
    <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
  </Style>

  <Style x:Key="IsNewUrlButtonStyle" TargetType="Button" BasedOn="{StaticResource UrlButtonStyle}">
    <Setter Property="Background" Value="{StaticResource AccentLightBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource AccentLightBrush}" />
  </Style>

  <Style x:Key="ButtonIconStyle" TargetType="Button" BasedOn="{StaticResource MaterialDesignIconButton}">
    <Setter Property="ToolTipService.InitialShowDelay" Value="0" />
    <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
  </Style>

  <Style x:Key="AccentButtonIconStyle" TargetType="Button" BasedOn="{StaticResource ButtonIconStyle}">
    <Setter Property="Foreground" Value="{StaticResource AccentLightBrush}" />
  </Style>

  <Style x:Key="StandardButtonIconStyle" TargetType="Button" BasedOn="{StaticResource ButtonIconStyle}">
    <Setter Property="Foreground" Value="{StaticResource PrimaryMidBrush}" />
  </Style>

  <converters:BoolToStringConverter x:Key="TabItemToColorConverter" True="#FF00C853" False="#89FFFFFF" /> <!--{DynamicResource MaterialDesignBodyLight}-->
  <converters:BoolToStyleConverter x:Key="IsNewUrlButtonStyleConverter" True="{StaticResource IsNewUrlButtonStyle}" False="{StaticResource UrlButtonStyle}" />

  <Style x:Key="HeaderStyle" TargetType="DataGridColumnHeader" BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
    <Setter Property="FontSize" Value="12" />
  </Style>

  <DataTemplate x:Key="UrlDetailTemplate" DataType="vps:UrlDetail">
    <!--<Button Style="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type ContentControl}}, Path=DataContext.IsNew, Converter={StaticResource IsNewUrlButtonStyleConverter}}"-->
    <Button Style="{Binding IsNew, Converter={StaticResource IsNewUrlButtonStyleConverter}}" ToolTip="{Binding Url}" Command="{Binding SelectedCommand}">
      <materialDesign:PackIcon Kind="{Binding Broken, Converter={StaticResource UrlToIconConverter}}" Height="40" Width="40" Foreground="{DynamicResource MaterialDesignBody}" />
    </Button>
  </DataTemplate>

  <DataTemplate x:Key="RatingTemplate" DataType="{x:Type game:LocalGame}">
    <!--temporarily disabled ratings bar as it appears to be causing rendering performance issues for the GridView.. scrolling and sorting-->
    <!--<materialDesign:RatingBar Value="{Binding Game.Rating, Mode=OneTime}"
                              Style="{StaticResource RatingBarStyle}" IsReadOnly="True" IsPreviewValueEnabled="False" />-->
    <TextBlock Text="{Binding Game.Rating}"/>
  </DataTemplate>

  <DataTemplate x:Key="FeatureTypeTemplate">
    <ItemsControl ItemsSource="{Binding}">
      <ItemsControl.ItemsPanel>
        <ItemsPanelTemplate>
          <WrapPanel />
        </ItemsPanelTemplate>
      </ItemsControl.ItemsPanel>
      <ItemsControl.ItemTemplate>
        <DataTemplate DataType="shared:FeatureType">
          <ContentControl Content="{Binding}" ContentTemplate="{StaticResource FeatureTypeRadioButtonTemplate}" />
        </DataTemplate>
      </ItemsControl.ItemTemplate>
    </ItemsControl>
  </DataTemplate>

  <Style x:Key="ComboBoxStyle" TargetType="ComboBox" BasedOn="{StaticResource MaterialDesignFloatingHintComboBox}">
    <Setter Property="IsDropDownOpen" Value="{Binding Path=IsKeyboardFocusWithin, Mode=OneWay, RelativeSource={RelativeSource Self}}" />
    <Setter Property="materialDesign:HintAssist.HintOpacity" Value=".5" />
    <Setter Property="IsEditable" Value="False" />
    <Setter Property="IsTextSearchEnabled" Value="False" />
    <Setter Property="materialDesign:TextFieldAssist.HasClearButton" Value="True" />
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <VirtualizingStackPanel />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="EditComboBoxStyle" TargetType="ComboBox" BasedOn="{StaticResource ComboBoxStyle}">
    <Setter Property="IsEditable" Value="True" />
  </Style>

  <DataTemplate x:Key="ExplorerResultsTemplate" DataType="{x:Type explorer:ExplorerResultsViewModel}">
    <materialDesign:DialogHost Identifier="ResultsDialog" CloseOnClickAway="True" VerticalAlignment="Stretch" DialogMargin="0" DialogBackground="Transparent">
      <!--example of different dialogs from the same host.. https://github.com/Keboo/MaterialDesignInXaml.Examples/blob/master/DialogHost/DialogHost.FromViewModel/MainWindow.xaml-->
      <materialDesign:DialogHost.DialogContentTemplate>
        <DataTemplate>
          <DataTemplate.Resources>

            <!--image dialog-->
            <DataTemplate DataType="{x:Type vps:UrlSelection}">
              <StackPanel>
                <b:Interaction.Triggers>
                  <b:EventTrigger EventName="MouseUp">
                    <b:InvokeCommandAction Command="{Binding SelectedCommand}" />
                  </b:EventTrigger>
                </b:Interaction.Triggers>

                <Grid Name="container">
                  <Image Margin="20" Source="{Binding Url, Converter={StaticResource NullOrEmptyToUnsetConverter}}" Stretch="Uniform" Height="1100" />

                  <!-- apply opacity mask to the grid for the rounded edges
                       - would prefer to apply CornerRadius directly to the Image, but unfortunately it's not supported.. so instead house Image within Grid and apply an opacity mask
                       - border is dynamically sized to the grid (which is dynamically sized by the child Image content) to support Image stretch which results in a dynamic width (with fixed height
                       - Image must be defined before the opacity mask definition.. presumably to ensure the grid size has been calculated prior to binding
                       - the Border for the opacity mask can be anything, so long as it's defined
                       - fortunately, the effect is applied AFTER the opacity mask.. hence the 'glow' (correctly) surrounds the image and not the outer grid
                         - but does require the Image to contain a margin to house the effect
                       - refer https://stackoverflow.com/a/70214574/227110
                  -->
                  <Grid.OpacityMask>
                    <VisualBrush>
                      <VisualBrush.Visual>
                        <Border Height="{Binding ElementName=container, Path=ActualHeight}"
                                Width="{Binding ElementName=container, Path=ActualWidth}"
                                Background="Yellow" CornerRadius="20" />
                      </VisualBrush.Visual>
                    </VisualBrush>
                  </Grid.OpacityMask>
                  <Grid.Effect>
                    <DropShadowEffect ShadowDepth="0" Color="White" BlurRadius="20" RenderingBias="Performance" />
                  </Grid.Effect>
                </Grid>

                <!--non-visible button marked with IsCancel to support the escape key-->
                <Button Content="Cancel" Width="0" Height="0" IsCancel="True" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}" />
              </StackPanel>
            </DataTemplate>

            <!-- notification and database item (game) templates are imported at global file scope - refer (top of file) -->
          </DataTemplate.Resources>

          <!--render the appropriate template-->
          <ContentControl Content="{Binding}" />
        </DataTemplate>
      </materialDesign:DialogHost.DialogContentTemplate>


      <!-- dock panel to provide a scrollbar (if required) for the child controls -->
      <DockPanel Margin="5" VerticalAlignment="Stretch">
        <DockPanel DockPanel.Dock="Left" Width="950">
          <GroupBox DockPanel.Dock="Top" Header="Filters" Margin="0,0,0,10">
            <StackPanel Margin="5">
              <WrapPanel Margin="0,-5,0,0">  <!--margin kludge required here because the combo boxes have an excessive margin to cater for the helper text :(-->
                <ComboBox ItemsSource="{Binding GameFilters.TablesFilterView}"
                          Text="{Binding Path=Settings.SelectedTableFilter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          materialDesign:HintAssist.Hint="Table"
                          Style="{StaticResource EditComboBoxStyle}"
                          Width="265" Margin="0,0,10,0"
                          ToolTip="Filter the tables based on the table name.">
                  <b:Interaction.Triggers>
                    <controls:RoutedEventTrigger RoutedEvent="TextBoxBase.TextChanged">
                      <b:InvokeCommandAction Command="{Binding FilterChangedCommand}" />
                    </controls:RoutedEventTrigger>
                  </b:Interaction.Triggers>
                </ComboBox>

                <ComboBox ItemsSource="{Binding GameFilters.ManufacturersFilterView}"
                          Text="{Binding Path=Settings.SelectedManufacturerFilter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          materialDesign:HintAssist.Hint="Manufacturer"
                          Style="{StaticResource EditComboBoxStyle}"
                          Width="230" Margin="0"
                          ToolTip="Filter the tables based on the manufacturer.">
                  <b:Interaction.Triggers>
                    <controls:RoutedEventTrigger RoutedEvent="TextBoxBase.TextChanged">
                      <b:InvokeCommandAction Command="{Binding FilterChangedCommand}" />
                    </controls:RoutedEventTrigger>
                  </b:Interaction.Triggers>
                </ComboBox>

                <WrapPanel Margin="20,10,0,0" VerticalAlignment="Center"
                           ToolTip="When enabled, the drop down filtering options are dynamically updated to only include values from the filtered list of displayed tables.">
                  <ToggleButton IsChecked="{Binding Settings.IsDynamicFiltering}" Command="{Binding DynamicFilteringCommand}" />
                  <TextBlock Margin="5,0,0,0" Text="Dynamic Filtering" />
                </WrapPanel>
              </WrapPanel>

              <Grid Margin="0,10,0,0">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="1.20*" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <WrapPanel>
                  <ComboBox ItemsSource="{Binding GameFilters.TypesFilterView}"
                            SelectedItem="{Binding Path=Settings.SelectedTypeFilter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            materialDesign:HintAssist.Hint="Type"
                            Style="{StaticResource ComboBoxStyle}"
                            Width="65" Margin="0,0,0,0"
                            ToolTip="Filter the tables based on the table construction type: PM (Purely Mechanical), EM (Electromechanical), SS (Solid State).">
                    <b:Interaction.Triggers>
                      <controls:RoutedEventTrigger RoutedEvent="ComboBox.SelectionChanged">
                        <b:InvokeCommandAction Command="{Binding FilterChangedCommand}" />
                      </controls:RoutedEventTrigger>
                    </b:Interaction.Triggers>
                  </ComboBox>

                  <ComboBox ItemsSource="{Binding GameFilters.YearsBeginFilterView}"
                            SelectedItem="{Binding Path=Settings.SelectedYearBeginFilter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            materialDesign:HintAssist.Hint="Year From"
                            Style="{StaticResource ComboBoxStyle}"
                            Width="100" Margin="10,0,0,0"
                            ToolTip="Filter the tables based on the earliest manufacture year.">
                    <b:Interaction.Triggers>
                      <controls:RoutedEventTrigger RoutedEvent="ComboBox.SelectionChanged">
                        <b:InvokeCommandAction Command="{Binding FilterChangedCommand}" />
                      </controls:RoutedEventTrigger>
                    </b:Interaction.Triggers>
                  </ComboBox>

                  <ComboBox ItemsSource="{Binding GameFilters.YearsEndFilterView}"
                            SelectedItem="{Binding Path=Settings.SelectedYearEndFilter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            materialDesign:HintAssist.Hint="Year To"
                            Style="{StaticResource ComboBoxStyle}"
                            Width="80" Margin="10,0,0,0"
                            ToolTip="Filter the tables based on the latest manufacture year.">
                    <b:Interaction.Triggers>
                      <controls:RoutedEventTrigger RoutedEvent="ComboBox.SelectionChanged">
                        <b:InvokeCommandAction Command="{Binding FilterChangedCommand}" />
                      </controls:RoutedEventTrigger>
                    </b:Interaction.Triggers>
                  </ComboBox>
                </WrapPanel>

                <Separator Grid.Column="1" Style="{StaticResource SeparatorStyle}" Margin="2,5,12,0" />

                <WrapPanel Grid.Column="2">
                  <WrapPanel.Resources>
                    <Style x:Key="DatePickerStyle" TargetType="DatePicker" BasedOn="{StaticResource MaterialDesignFloatingHintDatePicker}">
                      <Setter Property="materialDesign:TextFieldAssist.HasClearButton" Value="True" />
                      <Setter Property="Margin" Value="10,0,0,0" />
                      <Setter Property="Padding" Value="0,2" />
                      <Setter Property="Width" Value="130" />
                    </Style>
                  </WrapPanel.Resources>

                  <DatePicker materialDesign:HintAssist.Hint="Updated From"
                              Style="{StaticResource DatePickerStyle}"
                              SelectedDate="{Binding Settings.SelectedUpdatedAtDateBegin}"
                              DisplayDateEnd="{Binding Settings.SelectedUpdatedAtDateEnd}"
                              Margin="0"
                              ToolTip="Filter the tables based on when the table was last updated. Ignored for unmatched tables.">
                    <b:Interaction.Triggers>
                      <controls:RoutedEventTrigger RoutedEvent="DatePicker.SelectedDateChanged">
                        <b:InvokeCommandAction Command="{Binding FilterChangedCommand}" />
                      </controls:RoutedEventTrigger>
                    </b:Interaction.Triggers>
                  </DatePicker>

                  <DatePicker materialDesign:HintAssist.Hint="Updated To"
                              Style="{StaticResource DatePickerStyle}"
                              SelectedDate="{Binding Settings.SelectedUpdatedAtDateEnd}"
                              DisplayDateStart="{Binding Settings.SelectedUpdatedAtDateBegin}"
                              ToolTip="Filter the tables based on when the table was last updated. Ignored for unmatched tables.">
                    <b:Interaction.Triggers>
                      <controls:RoutedEventTrigger RoutedEvent="DatePicker.SelectedDateChanged">
                        <b:InvokeCommandAction Command="{Binding FilterChangedCommand}" />
                      </controls:RoutedEventTrigger>
                    </b:Interaction.Triggers>
                  </DatePicker>

                  <materialDesign:PopupBox Style="{StaticResource MaterialDesignPopupBox}"
                                           PlacementMode="BottomAndAlignCentres"
                                           PopupMode="Click"
                                           PopupUniformCornerRadius="5"
                                           Width="30"
                                           ToolTip="Filter the tables based on when the table was last updated via the preset dates. Ignored for unmatched tables.">
                    <ItemsControl ItemsSource="{Binding GameFilters.PresetDateOptionsView}">
                      <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                          <StackPanel />
                        </ItemsPanelTemplate>
                      </ItemsControl.ItemsPanel>
                      <ItemsControl.ItemTemplate>
                        <DataTemplate DataType="shared:FeatureType">
                          <Button Content="{Binding Description}" Command="{Binding SelectedCommand}" />
                        </DataTemplate>
                      </ItemsControl.ItemTemplate>
                    </ItemsControl>
                  </materialDesign:PopupBox>
                </WrapPanel>
              </Grid>

              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="1.20*" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <WrapPanel>
                  <WrapPanel.Resources>
                    <Style x:Key="RatingsBarTextBoxStyle" TargetType="TextBox" BasedOn="{StaticResource MaterialDesignFloatingHintTextBox}">
                      <Setter Property="Margin" Value="0,10" />
                      <Setter Property="HorizontalAlignment" Value="Left" />
                      <Setter Property="materialDesign:TextFieldAssist.HasClearButton" Value="True" />
                      <!--<Setter Property="FontSize" Value="16" />-->
                      <Setter Property="controls:StylableInteraction.Triggers" Value="{StaticResource RatingsTextChangedTriggers}" />
                    </Style>
                  </WrapPanel.Resources>
                  
                  <Grid>
                    <!-- ratings is drawn within TextBox - refer DatabaseItem.xaml -->
                    <TextBox Text="{Binding Settings.SelectedMinRating, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             materialDesign:HintAssist.Hint="Min Rating" IsReadOnly="True" Opacity="0.5"
                             Style="{StaticResource RatingsBarTextBoxStyle}"
                             Width="240" />
                    <materialDesign:RatingBar Value="{Binding Settings.SelectedMinRating, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                              Style="{StaticResource RatingBarStyle}" Margin="70,4,0,0" />
                  </Grid>

                  <Grid Margin="10,0,0,0">
                    <!-- ratings is drawn within TextBox - refer DatabaseItem.xaml -->
                    <TextBox Text="{Binding Settings.SelectedMaxRating, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             materialDesign:HintAssist.Hint="Max Rating" IsReadOnly="True" Opacity="0.5"
                             Style="{StaticResource RatingsBarTextBoxStyle}"
                             Width="240" />
                    <materialDesign:RatingBar Value="{Binding Settings.SelectedMaxRating, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                              Style="{StaticResource RatingBarStyle}" Margin="70,4,0,0" />
                  </Grid>

                </WrapPanel>
                <Separator Grid.Column="1" Style="{StaticResource SeparatorStyle}" />

                <ContentControl Grid.Column="2" Template="{StaticResource KeyValueAutoPair}"
                                controls:GenericAttached.String="Style"
                                controls:GenericAttached.String2="Filter the tables based on whether the table was physically manufactured."
                                controls:GenericAttached.Double="60"
                                controls:GenericAttached.Double2="14"
                                VerticalAlignment="Center">
                  <ContentControl ContentTemplate="{StaticResource FeatureTypeTemplate}" Content="{Binding GameFilters.TableStyleOptionsView}" />
                </ContentControl>
              </Grid>
            </StackPanel>
          </GroupBox>

          <WrapPanel DockPanel.Dock="Top" HorizontalAlignment="Right" TextBlock.FontStyle="Italic" Opacity="0.6">
            <TextBlock Text="{Binding GamesView.Count}" />
            <TextBlock Text=" / " />
            <TextBlock Text="{Binding Games.Count}" />
          </WrapPanel>

          <DataGrid Name="ExplorerResults" DockPanel.Dock="Bottom" SelectionMode="Single"
                    ItemsSource="{Binding GamesView}" AutoGenerateColumns="False" CanUserAddRows="False"
                    CanUserDeleteRows="False"
                    materialDesign:DataGridAssist.ColumnHeaderPadding="4 1 1 4"
                    materialDesign:DataGridAssist.CellPadding="4 1 1 4"
                    CellStyle="{StaticResource NoBorderDataGridCellStyle}"
                    ColumnHeaderStyle="{StaticResource HeaderStyle}" CanUserSortColumns="True" IsReadOnly="True"
                    SelectedItem="{Binding SelectedLocalGame}"
                    EnableRowVirtualization="True">

            <DataGrid.Resources>
              <converters:BoolToStringConverter x:Key="IsOriginalToIconConverter" True="Check" False="Check" />

              <DataTemplate x:Key="IsManufacturedTemplate" DataType="game:LocalGame">
                <materialDesign:PackIcon x:Name="Icon" Kind="{Binding Derived.IsOriginal, Converter={StaticResource IsOriginalToIconConverter}}"
                                         Height="30" Width="30" VerticalAlignment="Center" HorizontalAlignment="Center">
                  <!-- just for giggles.. setting foreground by a style trigger instead of a converter.. it's rather large!-->
                  <materialDesign:PackIcon.Style>
                    <Style TargetType="materialDesign:PackIcon">
                      <Style.Triggers>
                        <DataTrigger Binding="{Binding Derived.IsOriginal}" Value="True">
                          <Setter Property="Foreground" Value="{StaticResource PrimaryMidBrush}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Derived.IsOriginal}" Value="False">
                          <Setter Property="Foreground" Value="{StaticResource AccentLightBrush}" />
                        </DataTrigger>
                      </Style.Triggers>
                    </Style>
                  </materialDesign:PackIcon.Style>
                </materialDesign:PackIcon>
              </DataTemplate>

              <Style x:Key="CellStyle" TargetType="DataGridCell" BasedOn="{StaticResource MaterialDesignDataGridCell}">
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
              </Style>

            </DataGrid.Resources>

            <b:Interaction.Triggers>
              <b:EventTrigger EventName="SelectionChanged">
                <b:InvokeCommandAction Command="{Binding LocalGameSelectedCommand}" />
              </b:EventTrigger>
            </b:Interaction.Triggers>

            <DataGrid.Columns>
              <DataGridTextColumn d:DataContext="{d:DesignInstance Type=game:LocalGame}" ElementStyle="{StaticResource VerticalAlignDataElementTextStyle}"
                                  Header="#" Binding="{Binding Derived.Number}" Width="45" />

              <!--<DataGridTemplateColumn d:DataContext="{d:DesignInstance Type=game:LocalGame}" Header="Fix" Width="30" SortMemberPath="OnlineGame.IsMatched">
                <DataGridTemplateColumn.CellTemplate>
                  <DataTemplate>
                    <WrapPanel Margin="-7,-2,0,0">
                      <Button Style="{StaticResource ButtonIconStyle}" Height="30" Width="30"
                              ToolTip="{Binding UpdateDatabaseMatchedEntryTooltip}"
                              Visibility="{Binding TableMatchType, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static feederModels:TableMatchOptionEnum.LocalAndOnline}}"
                              IsEnabled="{Binding IsMatchingEnabled}"
                              Command="{Binding UpdateDatabaseEntryCommand}">
                        <materialDesign:PackIcon Kind="AutoRenew" Width="33" Height="33" />
                      </Button>
                      <Button Style="{StaticResource AccentButtonIconStyle}" Height="30" Width="30"
                              ToolTip="{Binding UpdateDatabaseUnmatchedEntryTooltip}"
                              Visibility="{Binding TableMatchType, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static feederModels:TableMatchOptionEnum.LocalOnly}}"
                              IsEnabled="{Binding IsMatchingEnabled}"
                              Command="{Binding UpdateDatabaseEntryCommand}">
                        <materialDesign:PackIcon Kind="AutoRenew" Width="33" Height="33" />
                      </Button>
                      <Button Style="{StaticResource AccentButtonIconStyle}" Height="30" Width="30"
                              ToolTip="{Binding CreateDatabaseEntryTooltip}"
                              Visibility="{Binding TableMatchType, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static feederModels:TableMatchOptionEnum.OnlineOnly}}"
                              IsEnabled="{Binding IsMatchingEnabled}"
                              Command="{Binding CreateDatabaseEntryCommand}">
                        <materialDesign:PackIcon Kind="Plus" Width="33" Height="33" />
                      </Button>
                    </WrapPanel>
                  </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
              </DataGridTemplateColumn>-->

              <DataGridTextColumn d:DataContext="{d:DesignInstance Type=game:LocalGame}" ElementStyle="{StaticResource VerticalAlignDataElementTextStyle}" Header="Table"
                                  Binding="{Binding Fuzzy.TableDetails.ActualNameWithoutManufacturerOrYear}"
                                  Width="255" />
              <DataGridTextColumn d:DataContext="{d:DesignInstance Type=game:LocalGame}" ElementStyle="{StaticResource VerticalAlignDataElementTextStyle}" Header="Manufacturer"
                                  Binding="{Binding Game.Manufacturer}" Width="160" />
              <DataGridTextColumn d:DataContext="{d:DesignInstance Type=game:LocalGame}" ElementStyle="{StaticResource VerticalAlignDataElementTextStyle}" Header="Year"
                                  Binding="{Binding Game.Year}"
                                  Width="55" />
              <DataGridTemplateColumn d:DataContext="{d:DesignInstance Type=game:LocalGame}" CellTemplate="{StaticResource RatingTemplate}" Header="Rating"
                                      SortMemberPath="Game.Rating" Width="155" />
              <DataGridTextColumn d:DataContext="{d:DesignInstance Type=game:LocalGame}" ElementStyle="{StaticResource VerticalAlignDataElementTextStyle}" Header="Type"
                                  Binding="{Binding Game.Type}"
                                  Width="35" />
              <DataGridTemplateColumn d:DataContext="{d:DesignInstance Type=game:LocalGame}" Header="Manufactured" CellTemplate="{StaticResource IsManufacturedTemplate}"
                                      SortMemberPath="Derived.IsOriginal" Width="85" />
              <DataGridTextColumn d:DataContext="{d:DesignInstance Type=game:LocalGame}" ElementStyle="{StaticResource VerticalAlignDataElementTextStyle}" Header="Table/Backglass Update"
                                  Binding="{Binding Content.UpdatedAt, StringFormat={}{0:dd/MM/yy HH:mm}}"
                                  Width="140"/>
            </DataGrid.Columns>
          </DataGrid>
        </DockPanel>

        <DockPanel DockPanel.Dock="Right" Margin="10,0,0,0">
          <Grid>
            <StackPanel Visibility="{Binding ElementName=ExplorerResults, Path=SelectedIndex, Converter={StaticResource NegativeToVisibilityConverter}}"
                        VerticalAlignment="Center" HorizontalAlignment="Center">
              <materialDesign:PackIcon Kind="HelpCircleOutline" Width="400" Height="400" HorizontalAlignment="Center" />
              <TextBlock Text="Select a table to view the online information" FontSize="28" />
            </StackPanel>

            <!--<StackPanel Visibility="{Binding SelectedGameItem.OnlineGame, Converter={StaticResource NullToVisibilityConverter}}"
                        VerticalAlignment="Center" HorizontalAlignment="Center">
              <StackPanel Visibility="{Binding ElementName=ExplorerResults, Path=SelectedIndex, Converter={StaticResource PositiveToVisibilityConverter}}"
                          VerticalAlignment="Center" HorizontalAlignment="Center">
                <materialDesign:PackIcon Kind="AlertCircleOutline" Width="400" Height="400" HorizontalAlignment="Center" />
                <TextBlock Text="Online information is not available for unmatched tables" FontSize="28" />
              </StackPanel>
            </StackPanel> -->

            <StackPanel Visibility="{Binding ElementName=ExplorerResults, Path=SelectedIndex, Converter={StaticResource PositiveToVisibilityConverter}}">
              <StackPanel Visibility="{Binding SelectedLocalGame, Converter={StaticResource ReverseNullToVisibilityConverter}}">
                <TextBlock Text="{Binding SelectedLocalGame.Game.Name}" />
              </StackPanel>
            </StackPanel>
            <!-- <StackPanel Visibility="{Binding ElementName=ExplorerResults, Path=SelectedIndex, Converter={StaticResource PositiveToVisibilityConverter}}">
              <StackPanel Visibility="{Binding SelectedGameItem.OnlineGame, Converter={StaticResource ReverseNullToVisibilityConverter}}">
                <UniformGrid Columns="3">
                  <GroupBox Header="Hardware: Table Info">
                    <StackPanel Margin="5,0">
                      <ContentControl Template="{StaticResource KeyValueStringPair}" controls:GenericAttached.String="Name" controls:GenericAttached.String2="{Binding SelectedOnlineGame.Name}" />
                      <UniformGrid Columns="2">
                        <ContentControl Template="{StaticResource KeyValueStringPair}" controls:GenericAttached.String="Manufacturer"
                                        controls:GenericAttached.String2="{Binding SelectedOnlineGame.Manufacturer}" />
                        <ContentControl Template="{StaticResource KeyValueStringPair}" controls:GenericAttached.String="Year" controls:GenericAttached.String2="{Binding SelectedOnlineGame.Year}" />
                      </UniformGrid>
                      <UniformGrid Columns="2">
                        <ContentControl Template="{StaticResource KeyValueStringPair}" controls:GenericAttached.String="Type" controls:GenericAttached.String2="{Binding SelectedOnlineGame.Type}" />
                        <ContentControl Template="{StaticResource KeyValueStringPair}" controls:GenericAttached.String="Players"
                                        controls:GenericAttached.String2="{Binding SelectedOnlineGame.Players}" />
                      </UniformGrid>
                      <ContentControl Template="{StaticResource KeyValueStringPair}" controls:GenericAttached.String="MPU" controls:GenericAttached.String2="{Binding SelectedOnlineGame.Mpu}" />
                      <ContentControl Template="{StaticResource KeyValueStringPair}" controls:GenericAttached.String="Themes"
                                      controls:GenericAttached.String2="{Binding SelectedOnlineGame.Themes, Converter={StaticResource ListToStringConverter}}" />
                      <ContentControl Template="{StaticResource KeyValuePair}" controls:GenericAttached.String="IPDB">
                        <Hyperlink Command="{Binding NavigateToUrlCommand}" CommandParameter="{Binding SelectedOnlineGame.IpdbUrl}">
                          <TextBlock Text="{Binding SelectedOnlineGame.IpdbUrl}" Style="{StaticResource ValueTextBlockStyle}" />
                        </Hyperlink>
                      </ContentControl>
                    </StackPanel>
                  </GroupBox>

                  <ContentControl Content="{Binding SelectedOnlineGame.ImageUrlSelection}" ContentTemplate="{StaticResource ImageTemplate}" Margin="5,0" />

                  <GroupBox Header="Software: Virtualized Info">
                    <StackPanel Margin="5,0">
                      <ContentControl Template="{StaticResource KeyValueStringPair}" controls:GenericAttached.String="Updated"
                                      controls:GenericAttached.String2="{Binding SelectedOnlineGame.UpdatedAt}" />
                      <ContentControl Template="{StaticResource KeyValueStringPair}" controls:GenericAttached.String="Features"
                                      controls:GenericAttached.String2="{Binding SelectedOnlineGame.Features, Converter={StaticResource ListToStringConverter}}" />
                      <ContentControl Template="{StaticResource KeyValueStringPair}" controls:GenericAttached.String="Designers"
                                      controls:GenericAttached.String2="{Binding SelectedOnlineGame.Designers, Converter={StaticResource ListToStringConverter}}" />
                      <ContentControl Template="{StaticResource KeyValueStringPair}" controls:GenericAttached.String="Created"
                                      controls:GenericAttached.String2="{Binding SelectedOnlineGame.LastCreatedAt}" />
                      <ContentControl Template="{StaticResource KeyValueStringPair}" controls:GenericAttached.String="Updated"
                                      controls:GenericAttached.String2="{Binding SelectedOnlineGame.UpdatedAt}" />
                      <ContentControl Template="{StaticResource KeyValueStringPair}" controls:GenericAttached.String="Broken" controls:GenericAttached.String2="{Binding SelectedOnlineGame.Broken}" />
                      <ContentControl Template="{StaticResource KeyValuePair}" controls:GenericAttached.String="VPS">
                        <Hyperlink Command="{Binding NavigateToUrlCommand}" CommandParameter="{Binding SelectedOnlineGame.VpsUrl}">
                          <TextBlock Text="{Binding SelectedOnlineGame.VpsUrl}" Style="{StaticResource ValueTextBlockStyle}" />
                        </Hyperlink>
                      </ContentControl>
                    </StackPanel>
                  </GroupBox>
                </UniformGrid>

                <GroupBox Margin="0,10,0,0" Header="Files">
                  <GroupBox.Resources>
                    <Style x:Key="TabControlStyle" TargetType="TabControl" BasedOn="{StaticResource MaterialDesignTabControl}" />
                  </GroupBox.Resources>

                  <TabControl Style="{StaticResource TabControlStyle}" ItemsSource="{Binding SelectedOnlineGame.AllFilesList}" SelectedItem="{Binding SelectedFileCollection}">
                    <TabControl.ItemTemplate>
                      <DataTemplate DataType="{x:Type vps:FileCollection}">
                        <WrapPanel>
                          <TextBlock FontSize="18" FontWeight="Bold" VerticalAlignment="Center" Text="{Binding Title}"
                                     Foreground="{Binding IsNew, Converter={StaticResource TabItemToColorConverter}}" />
                          <materialDesign:PackIcon Kind="NewBox" Height="32" Width="32" Margin="1,-16,0,0" Foreground="{StaticResource AccentLightBrush}"
                                                   Visibility="{Binding IsNew, Converter={StaticResource ReverseBoolToHiddenConverter}}" />
                        </WrapPanel>
                      </DataTemplate>
                    </TabControl.ItemTemplate>

                    <TabControl.ContentTemplate>
                      <DataTemplate>
                        <ContentControl Content="{Binding}" ContentTemplate="{StaticResource FilesTemplate}" />
                      </DataTemplate>
                    </TabControl.ContentTemplate>

                    <TabControl.ItemContainerStyle>
                      <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource MaterialDesignTabItem}" d:DataContext="{d:DesignInstance vps:FileCollection}">
                        <Setter Property="IsEnabled" Value="{Binding Count}" />
                        <Setter Property="Padding" Value="6,12" />
                      </Style>
                    </TabControl.ItemContainerStyle>
                  </TabControl>
                </GroupBox>
              </StackPanel>
            </StackPanel>-->
          </Grid>
        </DockPanel>
      </DockPanel>
    </materialDesign:DialogHost>
  </DataTemplate>
</ResourceDictionary>