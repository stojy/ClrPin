<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:validationRules="clr-namespace:ClrVpin.Validation_Rules"
                    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
                    xmlns:folderSelection="clr-namespace:ClrVpin.Controls.FolderSelection">

  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
    <ResourceDictionary Source="\Controls\Styles.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <Style x:Key="TextBoxStyle" TargetType="TextBox" BasedOn="{StaticResource MaterialDesignFloatingHintTextBox}">
    <Setter Property="Width" Value="400" />
    <Setter Property="materialDesign:TextFieldAssist.HasClearButton" Value="True" />
  </Style>

  <!-- present folder name (with optional folder suffix matching) and open folder button -->
  <DataTemplate x:Key="FolderSelection" DataType="folderSelection:FolderTypeDetail">
    <WrapPanel Height="50">
      <TextBox Style="{StaticResource TextBoxStyle}" materialDesign:HintAssist.Hint="{Binding Description}">
        <TextBox.Resources>
          <validationRules:BindingProxy x:Key="Proxy" Data="{Binding}"/>
        </TextBox.Resources>

        <TextBox.Text>
          <Binding Path="Folder" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay">
            <Binding.ValidationRules>
              <validationRules:FileExistsValidationRule ValidatesOnTargetUpdated="True"/>
              <validationRules:FilePatternValidation ValidatesOnTargetUpdated="True" >
                <!-- convoluted args property and bindingproxy required to support adding a new property that doesn't directly support binding
                     - refer https://social.technet.microsoft.com/wiki/contents/articles/31422.wpf-passing-a-data-bound-value-to-a-validation-rule.aspx -->
                <validationRules:FilePatternValidation.Args>
                  <validationRules:Args Pattern="{Binding Data.PatternValidation, Source={StaticResource Proxy}}"/>
                </validationRules:FilePatternValidation.Args>
              </validationRules:FilePatternValidation>
            </Binding.ValidationRules>
          </Binding>
        </TextBox.Text>

        <b:Interaction.Triggers>
          <b:EventTrigger EventName="TextChanged">
            <!-- pass event args to allow workaround for the validation rule triggering which subsequently doesn't update the binding source -->
            <b:InvokeCommandAction Command="{Binding FolderChangedCommandWithParam}" PassEventArgsToCommand="True" />
          </b:EventTrigger>
        </b:Interaction.Triggers>
      </TextBox>

      <Button Command="{Binding FolderExplorerCommand}" Style="{StaticResource MaterialDesignIconButton}" ToolTip="Change folder" Height="30">
        <materialDesign:PackIcon Kind="FolderOpenOutline"/>
      </Button>
    </WrapPanel>
  </DataTemplate>


</ResourceDictionary>