<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:models="clr-namespace:ClrVpin.Models"
                    xmlns:scanner="clr-namespace:ClrVpin.Scanner"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
                    xmlns:converters="clr-namespace:ClrVpin.Converters"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" mc:Ignorable="d"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:database="clr-namespace:ClrVpin.Models.Shared.Database"
                    xmlns:shared="clr-namespace:ClrVpin.Models.Shared">

  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
    <ResourceDictionary Source="/Controls/Styles.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <converters:ContentTypeToIconConverter x:Key="ContentTypeToIconConverter" />
  <converters:BoolToStringConverter x:Key="SmellyToIconConverter" True="Exclamation" False="Check" />

  <DataTemplate x:Key="HitTemplate" DataType="shared:Hit">
    <Grid Background="Transparent">
      <materialDesign:PackIcon Kind="{Binding ContentTypeEnum, Converter={StaticResource ContentTypeToIconConverter}}"
                               Height="45" Width="45" VerticalAlignment="Center" HorizontalAlignment="Center" />
      <b:Interaction.Triggers>
        <b:EventTrigger EventName="MouseUp">
          <b:InvokeCommandAction Command="{Binding OpenFileCommand}" />
        </b:EventTrigger>
      </b:Interaction.Triggers>
    </Grid>
  </DataTemplate>

  <DataTemplate x:Key="ContentTemplate" DataType="database:Game">
    <ListBox ItemsSource="{Binding Content.Hits}" ItemTemplate="{StaticResource HitTemplate}">
      <ListBox.ItemsPanel>
        <ItemsPanelTemplate>
          <WrapPanel Orientation="Vertical" MaxHeight="45" />
        </ItemsPanelTemplate>
      </ListBox.ItemsPanel>

      <ListBox.ItemContainerStyle>
        <Style TargetType="ListBoxItem" d:DataContext="{d:DesignInstance Type=shared:Hit}">
          <!-- assign smaller padding to maximize the content size (template bound to material's Ripple) -->
          <Setter Property="Padding" Value="2" />
          <Setter Property="IsEnabled" Value="{Binding IsPresent}" />

          <!-- add tooltip to list box item instead of within pack icon so that it's not restricted to the mouse over the actual icon image -->
          <Setter Property="ToolTipService.ToolTip" Value="{Binding Description}" />
          <Setter Property="ToolTipService.ShowOnDisabled" Value="true" />
        </Style>
      </ListBox.ItemContainerStyle>
    </ListBox>
  </DataTemplate>

  <DataTemplate x:Key="SmellyTemplate" DataType="database:Game">
    <materialDesign:PackIcon x:Name="Icon" Kind="{Binding Content.IsSmelly, Converter={StaticResource SmellyToIconConverter}}"
                             Height="25" Width="25" VerticalAlignment="Center" HorizontalAlignment="Center">
      <!-- just for giggles.. setting foreground by a style trigger instead of a converter.. it's rather large!-->
      <materialDesign:PackIcon.Style>
        <Style TargetType="materialDesign:PackIcon">
          <Style.Triggers>
            <DataTrigger Binding="{Binding Content.IsSmelly}" Value="True">
              <Setter Property="Foreground" Value="Coral" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Content.IsSmelly}" Value="False">
              <Setter Property="Foreground" Value="{DynamicResource SecondaryHueDarkBrush}" />
            </DataTrigger>
          </Style.Triggers>
        </Style>
      </materialDesign:PackIcon.Style>
    </materialDesign:PackIcon>
  </DataTemplate>

  <DataTemplate x:Key="IpdbTemplate" DataType="database:Game">
    <TextBlock>
      <Hyperlink NavigateUri="{Binding IpdbUrl}" Command="{Binding NavigateToIpdbCommand}">
        <TextBlock Text="{Binding Ipdb}" />
      </Hyperlink>
    </TextBlock>

  </DataTemplate>

  <Style x:Key="TextCellStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource MaterialDesignDataGridTextColumnStyle}">
    <Setter Property="TextWrapping" Value="Wrap" />
  </Style>

  <DataTemplate x:Key="ScannerExplorerTemplate" DataType="{x:Type scanner:ScannerExplorerViewModel}">
    <DockPanel>
      <WrapPanel DockPanel.Dock="Top" Margin="10,0,0,20">
        <TextBox Width="150" HorizontalAlignment="Left"
                 Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.Hint="Search" materialDesign:HintAssist.HelperText="e.g. magic"
                 materialDesign:TextFieldAssist.HasClearButton="True"
                 Text="{Binding SearchText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
          <b:Interaction.Triggers>
            <b:EventTrigger EventName="TextChanged">
              <b:InvokeCommandAction Command="{Binding SearchTextCommand}" />
            </b:EventTrigger>
          </b:Interaction.Triggers>
        </TextBox>

        <WrapPanel Margin="30,0,0,0" VerticalAlignment="Bottom" TextBlock.FontStyle="Italic" Opacity="0.6">
          <TextBlock Text="{Binding GamesView.Count}" />
          <TextBlock Text=" / " />
          <TextBlock Text="{Binding Games.Count}" />
        </WrapPanel>
      </WrapPanel>

      <DataGrid DockPanel.Dock="Bottom" Name="ScannerResults" ItemsSource="{Binding GamesView}" AutoGenerateColumns="False" CanUserAddRows="False"
                materialDesign:DataGridAssist.CellPadding="15 5 5 8" materialDesign:DataGridAssist.ColumnHeaderPadding="15 5 5 8"
                CellStyle="{StaticResource NoBorderDataGridCellStyle}">
        <DataGrid.Columns>
          <DataGridTextColumn d:DataContext="{d:DesignInstance Type=database:Game}" Header="#" Binding="{Binding Number}" IsReadOnly="True" ElementStyle="{StaticResource TextCellStyle}" />
          <DataGridTemplateColumn d:DataContext="{d:DesignInstance Type=database:Game}" Header="Valid" CellTemplate="{StaticResource SmellyTemplate}" SortMemberPath="Content.IsSmelly"
                                  CanUserSort="True" />
          <DataGridTemplateColumn d:DataContext="{d:DesignInstance Type=database:Game}" Header="IPDB" CellTemplate="{StaticResource IpdbTemplate}" />
          <DataGridTextColumn d:DataContext="{d:DesignInstance Type=database:Game}" Header="Table" Binding="{Binding TableFileWithExtension}" Width="280" IsReadOnly="True"
                              ElementStyle="{StaticResource TextCellStyle}" />
          <DataGridTextColumn d:DataContext="{d:DesignInstance Type=database:Game}" Header="Description" Binding="{Binding Description}" Width="280" IsReadOnly="True"
                              ElementStyle="{StaticResource TextCellStyle}" />
          <DataGridTextColumn d:DataContext="{d:DesignInstance Type=database:Game}" Header="Manufacturer" Binding="{Binding Manufacturer}" Width="150" IsReadOnly="True"
                              ElementStyle="{StaticResource TextCellStyle}" />
          <DataGridTextColumn d:DataContext="{d:DesignInstance Type=database:Game}" Header="Year" Binding="{Binding Year}" IsReadOnly="True" ElementStyle="{StaticResource TextCellStyle}" />
          <DataGridTextColumn d:DataContext="{d:DesignInstance Type=database:Game}" Header="Rating" Binding="{Binding Rating}" IsReadOnly="True" ElementStyle="{StaticResource TextCellStyle}" />
          <!--<DataGridTextColumn Header="Modified" Binding="{Binding DateModified}" />-->
          <DataGridTextColumn d:DataContext="{d:DesignInstance Type=database:Game}" Header="Author(s)" Binding="{Binding Author}" Width="200" IsReadOnly="True"
                              ElementStyle="{StaticResource TextCellStyle}" />

          <DataGridTemplateColumn Header="Content" CellTemplate="{StaticResource ContentTemplate}" />
        </DataGrid.Columns>
      </DataGrid>
    </DockPanel>

  </DataTemplate>

</ResourceDictionary>