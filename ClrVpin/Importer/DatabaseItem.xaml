<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    mc:Ignorable="d"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:database="clr-namespace:ClrVpin.Models.Shared.Database"
                    xmlns:importer="clr-namespace:ClrVpin.Importer"
                    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
                    xmlns:controls="clr-namespace:ClrVpin.Controls">

  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
    <ResourceDictionary Source="\Controls\Styles.xaml" />
    <ResourceDictionary Source="\Controls\Converters.xaml" />

  </ResourceDictionary.MergedDictionaries>

  <!-- x:Shared resources must be at the top level resource dictionary -->
  <controls:Triggers x:Key="TextChangedTriggers" x:Shared="False">
    <b:EventTrigger EventName="TextChanged">
      <b:InvokeCommandAction Command="{Binding ChangedCommand}" d:DataContext="{d:DesignInstance Type=database:Game}" />
    </b:EventTrigger>
  </controls:Triggers>

  <controls:Triggers x:Key="ComboChangedTriggers" x:Shared="False">
    <controls:RoutedEventTrigger RoutedEvent="TextBoxBase.TextChanged">
      <b:InvokeCommandAction Command="{Binding ChangedCommand}" d:DataContext="{d:DesignInstance Type=database:Game}" />
    </controls:RoutedEventTrigger>
  </controls:Triggers>

  <controls:Triggers x:Key="DatePickerChangedTriggers" x:Shared="False">
    <controls:RoutedEventTrigger RoutedEvent="DatePicker.SelectedDateChanged">
      <b:InvokeCommandAction Command="{Binding ChangedCommand}" d:DataContext="{d:DesignInstance Type=database:Game}" />
    </controls:RoutedEventTrigger>
  </controls:Triggers>

  <controls:Triggers x:Key="TimePickerChangedTriggers" x:Shared="False">
    <!--not using event trigger as it doesn't work.. for unknown reasons-->
    <!--<b:EventTrigger EventName="SelectedTime">
      <b:InvokeCommandAction Command="{Binding ChangedCommand}" d:DataContext="{d:DesignInstance Type=database:Game}" />
    </b:EventTrigger>-->

    <b:PropertyChangedTrigger Binding="{Binding DateModified}" d:DataContext="{d:DesignInstance Type=database:Game}">
      <b:InvokeCommandAction Command="{Binding ChangedCommand}" d:DataContext="{d:DesignInstance Type=database:Game}" />
    </b:PropertyChangedTrigger>
  </controls:Triggers>

  <!--table and frontend properties-->
  <DataTemplate DataType="{x:Type database:Game}">
    <StackPanel>
        <b:Interaction.Triggers>
          <b:EventTrigger EventName="Loaded">
            <b:InvokeCommandAction Command="{Binding LoadedCommand}"/>
          </b:EventTrigger>
          <b:EventTrigger EventName="Unloaded">
            <b:InvokeCommandAction Command="{Binding UnloadedCommand}"/>
          </b:EventTrigger>
        </b:Interaction.Triggers>

      <StackPanel.Resources>
        <Style x:Key="DatabaseEntryTextBoxStyle" TargetType="TextBox" BasedOn="{StaticResource MaterialDesignFloatingHintTextBox}">
          <Setter Property="Margin" Value="0,10" />
          <Setter Property="HorizontalAlignment" Value="Left" />
          <Setter Property="materialDesign:TextFieldAssist.HasClearButton" Value="True" />
          <Setter Property="FontSize" Value="16" />
          <Setter Property="controls:StylableInteraction.Triggers" Value="{StaticResource TextChangedTriggers}" />
          <!--<Setter Property="TextTrimming" Value="CharacterEllipsis" />-->
        </Style>

        <Style x:Key="ComboBoxStyle" TargetType="ComboBox" BasedOn="{StaticResource MaterialDesignFloatingHintComboBox}">
          <Setter Property="IsDropDownOpen" Value="{Binding Path=IsKeyboardFocusWithin, Mode=OneWay, RelativeSource={RelativeSource Self}}" />
          <Setter Property="materialDesign:HintAssist.HintOpacity" Value=".5" />
          <Setter Property="IsEditable" Value="False" />
          <Setter Property="IsTextSearchEnabled" Value="False" />
          <Setter Property="materialDesign:TextFieldAssist.HasClearButton" Value="True" />
          <Setter Property="HorizontalAlignment" Value="Left" />
          <Setter Property="VerticalAlignment" Value="Center" />
          <Setter Property="FontSize" Value="16" />
          <Setter Property="controls:StylableInteraction.Triggers" Value="{StaticResource ComboChangedTriggers}" />
          <Setter Property="ItemsPanel">
            <Setter.Value>
              <ItemsPanelTemplate>
                <VirtualizingStackPanel />
              </ItemsPanelTemplate>
            </Setter.Value>
          </Setter>
        </Style>

        <Style x:Key="EditComboBoxStyle" TargetType="ComboBox" BasedOn="{StaticResource ComboBoxStyle}">
          <Setter Property="IsEditable" Value="True" />
        </Style>
      </StackPanel.Resources>

      <TextBlock Style="{DynamicResource MaterialDesignHeadline5TextBlock}" Text="Local Database Entry" Margin="0" HorizontalAlignment="Center" />

      <!--table properties-->
      <GroupBox Header="Table Properties" Margin="0,10,0,0">
        <StackPanel Margin="5,0">
          <TextBox Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                   materialDesign:HintAssist.Hint="Name" materialDesign:HintAssist.HelperText="{Binding TableFileWithExtension}"
                   Style="{StaticResource DatabaseEntryTextBoxStyle}"
                   MinWidth="420" Margin="0,5,0,10" />

          <WrapPanel Margin="0,10,0,0">
            <ComboBox ItemsSource="{Binding ManufacturersView}"
                      Text="{Binding Path=Manufacturer, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      materialDesign:HintAssist.Hint="Manufacturer"
                      Width="210">
              <ComboBox.Style>
                <!-- dynamic helper text based on the manufacturer type 
                     - using style trigger instead of a WrapPanel of TextBlocks with visibility trigger.. because HintAssist.HelperText is hardcoded to TextBlock and not a generic control :( -->
                <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource EditComboBoxStyle}">
                  <Style.Triggers>
                    <DataTrigger Binding="{Binding IsOriginal}" Value="true">
                      <Setter Property="materialDesign:HintAssist.HelperText" Value="Original table (not manufactured)" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsOriginal}" Value="false">
                      <Setter Property="materialDesign:HintAssist.HelperText" Value="Manufactured table" />
                    </DataTrigger>
                  </Style.Triggers>
                </Style>
              </ComboBox.Style>
            </ComboBox>

            <TextBox Text="{Binding IpdbId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     materialDesign:HintAssist.Hint="IPDB Identifier" materialDesign:HintAssist.HelperText="{Binding IpdbUrl}"
                     IsEnabled="{Binding IsOriginal, Converter={StaticResource InvertBooleanConverter}}"
                     Style="{StaticResource DatabaseEntryTextBoxStyle}"
                     MinWidth="200" Margin="10,0,0,0" />
          </WrapPanel>

          <WrapPanel Margin="0,20,0,0">
            <ComboBox ItemsSource="{Binding YearsView}"
                      Text="{Binding Path=Year, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      materialDesign:HintAssist.Hint="Year"
                      Style="{StaticResource EditComboBoxStyle}"
                      MinWidth="80" />
            <ComboBox ItemsSource="{Binding TypesView}"
                      Text="{Binding Path=Type, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      materialDesign:HintAssist.Hint="Type" ToolTip="EM: electro-mechanical, SS: solid state, PM: purely mechanical"
                      Style="{StaticResource EditComboBoxStyle}"
                      MinWidth="80" Margin="10,0,0,0" />
            <ComboBox ItemsSource="{Binding PlayersView}"
                      Text="{Binding Path=Players, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      materialDesign:HintAssist.Hint="Players"
                      Style="{StaticResource EditComboBoxStyle}"
                      MinWidth="100" Margin="10,0,0,0" />
            <ComboBox ItemsSource="{Binding RomsView}"
                      Text="{Binding Path=Rom, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      materialDesign:HintAssist.Hint="ROM" materialDesign:HintAssist.HelperText="e.g. magic.zip"
                      Style="{StaticResource EditComboBoxStyle}"
                      MinWidth="130" Margin="10,0,0,0" />
          </WrapPanel>

          <ComboBox ItemsSource="{Binding ThemesView}"
                    Text="{Binding Path=Theme, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    materialDesign:HintAssist.Hint="Theme(s)"
                    Style="{StaticResource EditComboBoxStyle}"
                    MinWidth="420" Margin="0,10,0,10" />
        </StackPanel>
      </GroupBox>

      <!--frontend properties-->
      <GroupBox Header="Frontend Properties" Margin="0,15,0,0">
        <StackPanel Margin="5,0">
          <TextBox materialDesign:HintAssist.Hint="Description"
                   Text="{Binding Description, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                   Style="{StaticResource DatabaseEntryTextBoxStyle}"
                   Width="420" Margin="0,5,0,10" />

          <WrapPanel>
            <TextBox Text="{Binding Version, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     materialDesign:HintAssist.Hint="Version"
                     Style="{StaticResource DatabaseEntryTextBoxStyle}"
                     MinWidth="100" />
            <ComboBox ItemsSource="{Binding AuthorsView}"
                      Text="{Binding Path=Author, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      materialDesign:HintAssist.Hint="Author(s)"
                      Style="{StaticResource EditComboBoxStyle}"
                      MinWidth="315" Margin="5,10,0,10" />
          </WrapPanel>

          <WrapPanel>
            <TextBox Text="{Binding Rating, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     materialDesign:HintAssist.Hint="Rating" IsReadOnly="True"
                     Style="{StaticResource DatabaseEntryTextBoxStyle}"
                     MinWidth="65" />
            <Slider Value="{Binding Rating}" Minimum="0" Maximum="5"
                    TickFrequency="0.5" TickPlacement="BottomRight"
                    MinWidth="105" Margin="10,28,0,0" />
            <TextBox Text="{Binding Comment, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     materialDesign:HintAssist.Hint="Comment(s)"
                     Style="{StaticResource DatabaseEntryTextBoxStyle}"
                     MinWidth="230" Margin="10,10,0,10" />
          </WrapPanel>

          <WrapPanel>
            <WrapPanel.Resources>
              <Style x:Key="DatePickerStyle" TargetType="DatePicker" BasedOn="{StaticResource MaterialDesignFloatingHintDatePicker}">
                <Setter Property="materialDesign:TextFieldAssist.HasClearButton" Value="False" />
                <Setter Property="Margin" Value="0,10,0,15" />
                <Setter Property="Width" Value="112" />
                <Setter Property="FontSize" Value="16" />
                <Setter Property="SelectedDateFormat" Value="Short" />
                <Setter Property="DisplayDateEnd" Value="{Binding MaxDateTime}" />
                <Setter Property="controls:StylableInteraction.Triggers" Value="{StaticResource DatePickerChangedTriggers}" />
              </Style>

              <Style x:Key="TimePickerStyle" TargetType="materialDesign:TimePicker" BasedOn="{StaticResource MaterialDesignFloatingHintTimePicker}">
                <Setter Property="materialDesign:TextFieldAssist.HasClearButton" Value="False" />
                <Setter Property="Margin" Value="3,10,0,15" />
                <Setter Property="Width" Value="90" />
                <Setter Property="FontSize" Value="16" />
                <Setter Property="Is24Hours" Value="True" />
                <Setter Property="WithSeconds" Value="True" />
                <Setter Property="controls:StylableInteraction.Triggers" Value="{StaticResource TimePickerChangedTriggers}" />
              </Style>
            </WrapPanel.Resources>

            <DatePicker SelectedDate="{Binding DateAddedDateOnly}"
                        materialDesign:HintAssist.Hint="Added"
                        materialDesign:HintAssist.HelperText="{Binding DateAdded}"
                        Style="{StaticResource DatePickerStyle}" />
            <materialDesign:TimePicker SelectedTime="{Binding DateAdded}"
                                       materialDesign:HintAssist.Hint=" "
                                       Style="{StaticResource TimePickerStyle}" />

            <DatePicker SelectedDate="{Binding DateModifiedDateOnly}"
                        materialDesign:HintAssist.Hint="Modified"
                        materialDesign:HintAssist.HelperText="{Binding DateModified}"
                        Style="{StaticResource DatePickerStyle}" Margin="10,10,0,15"/>
            <materialDesign:TimePicker SelectedTime="{Binding DateModified}"
                                       materialDesign:HintAssist.Hint=" "
                                       Style="{StaticResource TimePickerStyle}" />
          </WrapPanel>
        </StackPanel>
      </GroupBox>
    </StackPanel>
  </DataTemplate>

  <!-- database item (game) -->
  <DataTemplate DataType="{x:Type importer:DatabaseItem}">
    <!--explicit border with background and padding required because the dialog background is transparent to support the image dialog-->
    <Border BorderThickness="0" Padding="10" Background="{DynamicResource MaterialDesignPaper}" MinWidth="400">
      <StackPanel>

        <ContentControl Content="{Binding Game}" />

        <!--buttons-->
        <WrapPanel HorizontalAlignment="Center" Margin="0,10,0,0">
          <WrapPanel.Resources>
            <Style x:Key="DialogButtonStyle" TargetType="Button" BasedOn="{StaticResource FlatButtonStyle}">
              <Setter Property="Margin" Value="0" />
              <Setter Property="Command" Value="{x:Static materialDesign:DialogHost.CloseDialogCommand}" />
            </Style>
            <Style x:Key="DialogButtonHighlightedStyle" TargetType="Button" BasedOn="{StaticResource FlatHighlightButtonStyle}">
              <Setter Property="Margin" Value="0" />
              <Setter Property="Command" Value="{x:Static materialDesign:DialogHost.CloseDialogCommand}" />
            </Style>
          </WrapPanel.Resources>

          <!--<Button Content="Save" HorizontalAlignment="Center" CommandParameter="True" Style="{StaticResource DialogButtonHighlightedStyle}"
                            ToolTip="Add entry to local database file" />-->
          <Button Content="Insert" Width="100" Style="{StaticResource DialogButtonHighlightedStyle}" CommandParameter="{x:Static importer:DatabaseItemAction.Insert}"
                  Visibility="{Binding IsExisting, Converter={StaticResource BoolToCollapsedConverter}}"
                  ToolTip="Update entry in your local database" />
          <Button Content="Update" Width="100" Style="{StaticResource DialogButtonHighlightedStyle}" CommandParameter="{x:Static importer:DatabaseItemAction.Update}"
                  Visibility="{Binding IsExisting, Converter={StaticResource BoolToVisibilityConverter}}"
                  IsEnabled="{Binding IsChanged}"
                  ToolTip="Update entry in your local database" />
          <Button Content="Cancel" IsCancel="True" Width="100" Style="{StaticResource DialogButtonStyle}" CommandParameter="{x:Static importer:DatabaseItemAction.Cancel}"
                  ToolTip="Exit without updating/inserting an entry in your local database" />
        </WrapPanel>

      </StackPanel>
    </Border>
  </DataTemplate>

</ResourceDictionary>