<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    mc:Ignorable="d"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:shared="clr-namespace:ClrVpin.Shared"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:controls="clr-namespace:ClrVpin.Controls">

  <ResourceDictionary.MergedDictionaries>
    <controls:SharedResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
    <controls:SharedResourceDictionary Source="\Controls\Constants.xaml" />
    <controls:SharedResourceDictionary Source="\Controls\Styles.xaml" />
    <controls:SharedResourceDictionary Source="\Controls\Converters.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <DataTemplate DataType="{x:Type shared:Notification}">

    <DataTemplate.Resources>
      <Style x:Key="HighlightButtonStyle" TargetType="Button" BasedOn="{StaticResource FlatHighlightButtonStyle}">
        <Setter Property="Width" Value="NaN" />
        <Setter Property="FontSize" Value="22" />
        <Setter Property="Command" Value="{x:Static materialDesign:DialogHost.CloseDialogCommand}" />
      </Style>
      <Style x:Key="StandardButtonStyle" TargetType="Button" BasedOn="{StaticResource FlatButtonStyle}">
        <Setter Property="Width" Value="NaN" />
        <Setter Property="FontSize" Value="22" />
        <Setter Property="Command" Value="{x:Static materialDesign:DialogHost.CloseDialogCommand}" />
        <Setter Property="Margin" Value="20,0,0,0" />
      </Style>
    </DataTemplate.Resources>

    <!--explicit border with background and padding required to..
        - support usage within a DialogHost that has a transparent background, e.g. feeder's image dialog
        - provide a corner radius
    -->
    <Border BorderThickness="1" BorderBrush="{StaticResource SeparatorBrush}" Padding="10" Background="{DynamicResource MaterialDesignPaper}" MinWidth="300" CornerRadius="10">
      <!--using input bindings instead of interaction trigger, as the event trigger DOES NOT WORK when housed within a border..
          - presumably something to do with the DialogHost.. but haven't confirmed 
      -->
      <Border.InputBindings>
        <MouseBinding MouseAction="LeftClick" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}" />
      </Border.InputBindings>
      <!--<b:Interaction.Triggers>
        <b:EventTrigger EventName="Click">
          <b:InvokeCommandAction Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}" />
        </b:EventTrigger>
      </b:Interaction.Triggers>-->

      <StackPanel Margin="10">
        <StackPanel.Resources>
          <Style x:Key="IconStyle" TargetType="materialDesign:PackIcon">
            <Setter Property="Height" Value="200" />
            <Setter Property="Width" Value="200" />
            <Setter Property="Margin" Value="0,0,0,20" />
            <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
            <Setter Property="HorizontalAlignment" Value="Center" />
          </Style>
        </StackPanel.Resources>

        <materialDesign:PackIcon Kind="CheckCircleOutline" Foreground="{StaticResource AccentLightBrush}"
                                 Visibility="{Binding IsSuccess, Converter={StaticResource BoolToVisibilityConverter}}" Style="{StaticResource IconStyle}" />
        <materialDesign:PackIcon Kind="AlertCircleOutline" Foreground="{StaticResource AlertBrush}"
                                 Visibility="{Binding IsWarning, Converter={StaticResource BoolToVisibilityConverter}}" Style="{StaticResource IconStyle}" />
        <materialDesign:PackIcon Kind="CloseCircleOutline" Foreground="{StaticResource ErrorBrush}"
                                 Visibility="{Binding IsError, Converter={StaticResource BoolToVisibilityConverter}}" Style="{StaticResource IconStyle}" />
        <materialDesign:PackIcon Kind="QuestionMarkCircleOutline" Foreground="{StaticResource AlertBrush}"
                                 Visibility="{Binding IsConfirmation, Converter={StaticResource BoolToVisibilityConverter}}" Style="{StaticResource IconStyle}" />

        <StackPanel Margin="0,0,0,10">
          <TextBlock Text="{Binding Title}" Visibility="{Binding Title, Converter={StaticResource ReverseNullToVisibilityConverter}}"
                     Style="{DynamicResource MaterialDesignHeadline4TextBlock}" Margin="0" HorizontalAlignment="Center" />
          <TextBlock Text="{Binding SubTitle}" Visibility="{Binding SubTitle, Converter={StaticResource ReverseNullToVisibilityConverter}}"
                     Style="{DynamicResource MaterialDesignHeadline6TextBlock}" Margin="0,30,0,10" HorizontalAlignment="Left" />
          <ScrollViewer MaxWidth="1500" MaxHeight="1000" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="True">
            <TextBlock Name="Detail"
                       Text="{Binding Detail}" Visibility="{Binding Detail, Converter={StaticResource ReverseNullToVisibilityConverter}}"
                       FontSize="18" Margin="0,30,0,0" />
          </ScrollViewer>
        </StackPanel>

        <!--non-visible button marked with IsCancel to support the escape key-->
        <Button Content="Cancel" Style="{StaticResource HiddenButtonStyle}" IsCancel="True" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}" />

        <WrapPanel Margin="0,15,0,0" HorizontalAlignment="Center" Visibility="{Binding IsConfirmation, Converter={StaticResource BoolToVisibilityConverter}}">
          <Button Content="{Binding TrueLabel}" CommandParameter="{StaticResource TrueValue}"
                  Style="{StaticResource HighlightButtonStyle}" />
          <Button Content="{Binding FalseLabel}" CommandParameter="{StaticResource FalseValue}"
                  Style="{StaticResource StandardButtonStyle}" />
        </WrapPanel>

        <Button Visibility="{Binding ShowCloseButton, Converter={StaticResource BoolToVisibilityConverter}}"
                Content="Close" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}"
                Style="{StaticResource HighlightButtonStyle}" Margin="0,10,0,0" />
      </StackPanel>
    </Border>

    <DataTemplate.Triggers>
      <DataTrigger Binding="{Binding DetailIsMonospaced}" Value="True">
        <Setter TargetName="Detail" Property="FontFamily" Value="Courier New" />
      </DataTrigger>
    </DataTemplate.Triggers>
  </DataTemplate>

</ResourceDictionary>