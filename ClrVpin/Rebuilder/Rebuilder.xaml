<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:rebuilder="clr-namespace:ClrVpin.Rebuilder"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:validationRules="clr-namespace:ClrVpin.Validation_Rules"
                    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
                    xmlns:shared="clr-namespace:ClrVpin.Models.Shared"
                    xmlns:controls="clr-namespace:ClrVpin.Controls">

  <ResourceDictionary.MergedDictionaries>
    <controls:SharedResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
    <controls:SharedResourceDictionary Source="/Controls/Styles.xaml" />
    <controls:SharedResourceDictionary Source="/Controls/DataTemplates.xaml" />
    <controls:SharedResourceDictionary Source="/Controls/FolderSelection/FolderSelection.xaml" />
    <controls:SharedResourceDictionary Source="\Controls\Converters.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <DataTemplate x:Key="RebuilderTemplate" DataType="{x:Type rebuilder:RebuilderViewModel}">
    <StackPanel Margin="5">
      <TextBlock Style="{StaticResource TitleStyle}">Content</TextBlock>
      <WrapPanel>
        <ContentControl ContentTemplate="{StaticResource FolderSelection}" Margin="0" Content="{Binding SourceFolderModel}" />

        <ComboBox materialDesign:HintAssist.Hint="Destination Type" ItemsSource="{Binding DestinationContentTypes}"
                  Width="170" VerticalAlignment="Top"
                  Style="{StaticResource MaterialDesignFloatingHintComboBox}" materialDesign:TextFieldAssist.HasClearButton="True">
          <ComboBox.SelectedItem>
            <Binding Path="Settings.Rebuilder.DestinationContentType" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
              <Binding.ValidationRules>
                <validationRules:NotEmptyValidationRule ValidatesOnTargetUpdated="True" Description="Content type" />
              </Binding.ValidationRules>
            </Binding>
          </ComboBox.SelectedItem>
          <b:Interaction.Triggers>
            <b:EventTrigger EventName="SelectionChanged">
              <b:InvokeCommandAction Command="{Binding DestinationContentTypeSelectedCommand}" />
            </b:EventTrigger>
          </b:Interaction.Triggers>
        </ComboBox>
      </WrapPanel>

      <TextBlock Style="{StaticResource TitleStyle}">Match</TextBlock>
      <GroupBox Header="Criteria" Width="650">
        <StackPanel Margin="5,0,0,5" HorizontalAlignment="Left">
          <!-- not using an ItemsControl for the LCV (e.g. similar to scanner) in order to accommodate the unique associated controls (without mucking about with template triggers) -->
          <ContentControl Content="{Binding MatchWrongCase}" ContentTemplate="{StaticResource FeatureTypeCheckBoxTemplate}" />
          <ContentControl Content="{Binding MatchDuplicate}" ContentTemplate="{StaticResource FeatureTypeCheckBoxTemplate}" />
          <ContentControl Content="{Binding MatchTableName}" ContentTemplate="{StaticResource FeatureTypeCheckBoxTemplate}" />
          <WrapPanel>
            <WrapPanel Width="230">
              <ContentControl Content="{Binding MatchFuzzy}" ContentTemplate="{StaticResource FeatureTypeCheckBoxTemplate}" />
              <Button Visibility="{Binding MatchFuzzy.IsHelpSupported, Converter={StaticResource BoolToVisibilityConverter}}" Command="{Binding MatchFuzzy.HelpAction}"
                      Style="{StaticResource MaterialDesignIconButton}" ToolTip="Open help page in the browser" Height="NaN" Width="NaN" Margin="10,0,0,0">
                <materialDesign:PackIcon Kind="InformationOutline" />
              </Button>
            </WrapPanel>
            <Slider Margin="5,0" Width="390" HorizontalAlignment="Left"  
                    Minimum="50" Maximum="250" SelectionStart="100" IsSelectionRangeEnabled="True"
                    Value="{Binding Settings.MatchFuzzyMinimumPercentage}" 
                    IsEnabled="{Binding MatchFuzzy.IsActive}" 
                    ToolTip="Minimum confidence required for a fuzzy match (default 100%)" />
          </WrapPanel>

          <ContentControl Content="{Binding MatchSelectClearAllFeature}" ContentTemplate="{StaticResource FeatureTypeCheckBoxTemplate}" Width="230" HorizontalAlignment="Left" />
        </StackPanel>
      </GroupBox>

      <TextBlock Style="{StaticResource TitleStyle}" Text="Ignore" ToolTip="Criteria whereby source files will NOT be considered for merging" />
      <GroupBox Header="Criteria" Width="650">
        <StackPanel Margin="5,0,0,5" HorizontalAlignment="Left">
          <!-- not using an ItemsControl for the LCV (e.g. similar to scanner) in order to accommodate the unique associated controls (without mucking about with template triggers) -->
          <WrapPanel>
            <ContentControl Content="{Binding IgnoreIfContainsWordsFeature}" ContentTemplate="{StaticResource FeatureTypeCheckBoxTemplate}" Width="230" />

            <TextBox Margin="5,0,0,0" Width="390" HorizontalAlignment="Left" Style="{StaticResource TextBoxStyle}" VerticalAlignment="Top" materialDesign:HintAssist.Hint="Ignore Words"
                     IsEnabled="{Binding IgnoreIfContainsWordsFeature.IsActive}"
                     ToolTip="Ignore if file contain the following words (case insensitive, comma delimited)"
                     Text="{Binding IgnoreWordsString, UpdateSourceTrigger=PropertyChanged}">
              <b:Interaction.Triggers>
                <b:EventTrigger EventName="TextChanged">
                  <b:InvokeCommandAction Command="{Binding IgnoreWordsChangedCommand}" />
                </b:EventTrigger>
              </b:Interaction.Triggers>
            </TextBox>
          </WrapPanel>

          <WrapPanel Margin="0,5,0,0">
            <ContentControl Content="{Binding IgnoreIfSmallerFeature}" ContentTemplate="{StaticResource FeatureTypeCheckBoxTemplate}" Width="230" />
            <Slider Margin="5,0" Width="390" HorizontalAlignment="Left" Value="{Binding Settings.Rebuilder.IgnoreIfSmallerPercentage}"
                    IsEnabled="{Binding IgnoreIfSmallerFeature.IsActive}"
                    ToolTip="Ignore if file is smaller than the specified percentage" />
          </WrapPanel>

          <ContentControl Content="{Binding IgnoreIfNotNewerFeature}" ContentTemplate="{StaticResource FeatureTypeCheckBoxTemplate}" HorizontalAlignment="Left" Width="230" />

          <ContentControl Content="{Binding DeleteIgnoredFilesOptionFeature}" ContentTemplate="{StaticResource FeatureTypeCheckBoxTemplate}" />

          <ContentControl Content="{Binding IgnoreSelectClearAllFeature}" ContentTemplate="{StaticResource FeatureTypeCheckBoxTemplate}" />
        </StackPanel>
      </GroupBox>

      <TextBlock Style="{StaticResource TitleStyle}">Merge</TextBlock>
      <GroupBox Header="Options" Width="650">
        <ItemsControl ItemsSource="{Binding MergeOptionsView}" BorderThickness="5" HorizontalAlignment="Left">
          <ItemsControl.ItemTemplate>
            <DataTemplate DataType="shared:FeatureType">
              <ContentControl Content="{Binding}" ContentTemplate="{StaticResource FeatureTypeCheckBoxTemplate}" />
            </DataTemplate>
          </ItemsControl.ItemTemplate>
          <ItemsControl.ItemsPanel>
            <ItemsPanelTemplate>
              <WrapPanel ItemWidth="300" />
            </ItemsPanelTemplate>
          </ItemsControl.ItemsPanel>
        </ItemsControl>
      </GroupBox>

      <WrapPanel Margin="0,10,10,10">
        <ToggleButton ToolTip="When enabled, rebuilder will show what would be changed without making ANY actual changes. No files will be copied, moved, renamed, or deleted."
                      IsChecked="{Binding Settings.TrainerWheels}" />
        <TextBlock Margin="10,0,0,0" Text="Trainer Wheels" />
      </WrapPanel>

      <Button Margin="0" Width="50" Command="{Binding StartCommand}" Style="{StaticResource RaisedAccentButtonStyle}" IsEnabled="{Binding IsValid}">Start</Button>

    </StackPanel>
  </DataTemplate>

</ResourceDictionary>