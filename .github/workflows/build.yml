# github actions help: https://git.io/JvXDl
name: "CI build"

on:
  push:
    #branches: [ master_ ]
  #pull_request:
    # The branches below must be a subset of the branches above
    #branches: [ master ]
  schedule:
    # 5.01am GMT = 1.01pm WST
    - cron: '01 5 * * *'

jobs:
  info:
    name: info (ubuntu)
    runs-on: ubuntu-latest
    steps:
    - name: current path
      run: cd
    - name: directory
      run: dir -R
    - name: dotnet
      run: dotnet --info
    - name: git context
      env:
        GITHUB_CONTEXT: ${{ toJSON(github) }}
      run: echo expand above
    - name: job context
      env:
        JOB_CONTEXT: ${{ toJSON(job) }}
      run: echo expand above
    - name: steps context
      env:
        STEPS_CONTEXT: ${{ toJSON(steps) }}
      run: echo expand above
    - name: runner context
      env:
        RUNNER_CONTEXT: ${{ toJSON(runner) }}
      run: echo expand above
    - name: strategy context
      env:
        STRATEGY_CONTEXT: ${{ toJSON(strategy) }}
      run: echo expand above
    - name: matrix context
      env:
        MATRIX_CONTEXT: ${{ toJSON(matrix) }}
      run: echo expand above
    - name: inputs context
      env:
        INPUTS_CONTEXT: ${{ toJSON(inputs) }}
      run: echo expand above
    - name: env context
      env:
        ENV_CONTEXT: ${{ toJSON(env) }}
      run: echo expand above
        
  build:
    name: build, test, analyse, artifact (windows)
    # windows runner required because..
    # - setup-msbuild can only be run on Windows runners
    # - also WiX not installed on ubuntu/-latestlinux
    runs-on: windows-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
    - name: checkout
      uses: actions/checkout@v3

    # Initializes the CodeQL tools for scanning.
    - name: analysis setup (master and tag only)
      if: startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/master'
      uses: github/codeql-action/init@v1
      with:
        languages: 'csharp'
      
    # building via msbuild (as used by VS) instead of dotnet because Wix v3 lacks dotnet support
    # - https://github.com/wixtoolset/issues/issues/5627
    # - setup latest msbuild (v17.1 at time of writing), refer https://github.com/marketplace/actions/setup-msbuild
    - name: add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.1
    - name: version
      env:
        VERSION: ${{github.ref}}
      run: |
        echo 1
        echo $VERSION
        echo 2
        echo $env:VERSION
        echo 2.1
        echo %VERSION%
        
        $env:VERSION ??= '1.0.0.0'
        
        echo 3
        echo $VERSION
        echo 4
        echo $env:VERSION
    - name: info
      run: |
        dir "C:\Program Files (x86)"
        dir "C:\Program Files"
        echo path
        echo 1
        echo $VERSION
        echo 2
        echo $env:VERSION
        echo 2.1
        echo %VERSION%
    - name: build (tag only)
      run: msbuild ./ClrVpin.sln -t:restore,build -p:Configuration=Release -p:UseSharedCompilation=false -m -p:Version=%VERSION%
    - name: tests
      # unfortunately need to specify individual folders/projects instead of the solution file because of WiX v3 compatibility
      run: dotnet test ClrVpin.tests --no-restore && dotnet test Utils.tests --no-restore

    - name: upload artifact (tag only)
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-artifact@v3
      with:
        name: installer
        path: ClrVpin.setup\bin\release\*.msi
        retention-days: 5

    - name: analysis (master and tag only)
      # codeQL is rather slow, so only perform for master commits and tagging
      if: startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/master'
      uses: github/codeql-action/analyze@v1
          
  release:
    name: release (tag only - ubuntu)
    if: startsWith(github.ref, 'refs/tags/')      
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write # required for release notes only
    steps:
      # checkout required for access to the release notes template
      - name: checkout
        uses: actions/checkout@v3
      
      - name: download artifacts
        uses: actions/download-artifact@v3
        with:
          name: installer
      
      - name: release
        uses: ncipollo/release-action@v1
        with:
          artifactErrorsFailBuild: true
          artifacts: ClrVpin.Setup.msi
          draft: true
          name: '${{github.ref_name}}: tba'
          generateReleaseNotes: true
          bodyFile: docs/release/releaseNotesBody.md
                    
